package com.varankin.brains.db;

/**
 * Транзакция архива мыслительных структур.
 *
 * @author &copy; 2021 Николай Варанкин
 */
public interface Транзакция extends AutoCloseable
{
    /**
     * Завершает транзакцию.
     * 
     * @param фиксация {@code true} для фиксации изменений, {@code false} для их отката. 
     */
    void завершить( boolean фиксация );
    
    /**
     * Останавливает текущую нить выполнения до получения запрошенного режима
     * конкурентного выполнения транзакции.
     * 
     * @param режим режим выполнения транзакции.
     * @param владелец владелец блокировки.
     * @return менеджер запрошенного режима.
     */
    Блокировка согласовать( Режим режим, Object владелец );
    
    public enum Режим
    {
        /**
         * Права чтения базы данных без записи в нее.
         * 
         * Режим допускает одновременное выполнение транзакции с
         * другими транзакциями в том же режиме. В данном случае
         * остановка нити выполнения не происходит.
         * 
         * Если какая-либо транзакция выполняется в режиме 
         * {@link Режим#ЗАПРЕТ_ДОСТУПА}, текущая нить выполнения 
         * останавливается и ожидает ее окончания. 
         */
        ЧТЕНИЕ_БЕЗ_ЗАПИСИ,
        
        /**
         * Права чтения и записи в базу данных.
         * 
         * Режим не допускает одновременное выполнение транзакции с
         * другими транзакциями в любом режиме. Если какая-либо 
         * транзакция уже выполняется в некотором режиме, текущая 
         * нить выполнения останавливается и ожидает ее окончания. 
         */
        ЗАПРЕТ_ДОСТУПА
    }

    /**
     * Менеджер режима блокировки.
     */
    public interface Блокировка
    {
        /**
         * Снимает ранее установленную блокировку.
         * @deprecated неясны последствия для режима ЗАПРЕТ_ДОСТУПА
         */
        @Deprecated
        void снять();
    }
}
