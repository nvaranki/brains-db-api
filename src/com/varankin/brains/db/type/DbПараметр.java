package com.varankin.brains.db.type;

import com.varankin.brains.db.DbОператор;
import com.varankin.brains.db.Внешний;
import com.varankin.brains.db.Параметризованный;

/**
 * Параметр настройки экземпляра {@linkplain Object объекта}.
 * Это одиночный скаляр, массив из однородных скаляров/массивов или
 * их произвольная комбинация (структура). Название параметра может быть 
 * получено методом {@link DbЭлемент#название() }. Простое содержимое 
 * определяется коллекцией {@link #тексты()}.
 *
 * @author &copy; 2021 Николай Варанкин
 */
public interface DbПараметр extends Параметризованный, Внешний, DbЭлемент
{

    /**
     * @return идентификатор данного объекта в составе владельца.
     */
    String индекс();
    
    /**
     * @param значение идентификатор данного объекта в составе владельца.
     */
    void индекс( String значение );

    /**
     * @return приоритет данного параметра при разрешении коллизий.
     */
    Integer приоритет();
    
    /**
     * @param значение приоритет данного параметра при разрешении коллизий.
     */
    void приоритет( Integer значение );

    @Override
    default <X> X выполнить( DbОператор<X> оператор, DbАтрибутный узел )
    {
        X результат;
        if( узел instanceof DbКлассJava )
            результат = оператор.выполнить( (DbКлассJava)узел, классы() );
        else if( узел instanceof DbПараметр )
            результат = оператор.выполнить( (DbПараметр)узел, параметры() );
        else 
            результат = DbЭлемент.super.выполнить( оператор, узел );
        return результат;
    }
    
}
