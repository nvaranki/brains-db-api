package com.varankin.brains.db.type;

import com.varankin.brains.db.DbОператор;
import com.varankin.brains.db.Коллекция;

/**
 * Вычислимый фрагмент мыслительной структуры. 
 * Состоит из одной или нескольких схем расчета и 
 * внешних соединений, связанных сигналами.
 *
 * @author &copy; 2021 Николай Варанкин
 */
public interface DbРасчет extends DbФрагмент.Экземпляр
{
    
    /**
     * @return корневые точки (результат) схем расчета.
     */
    Коллекция<DbТочка> точки();

    @Override
    default <X> X выполнить( DbОператор<X> оператор, DbАтрибутный узел )
    {
        X результат;
        if( узел instanceof DbСоединение )
            результат = оператор.выполнить( (DbСоединение)узел, соединения() );
        else if( узел instanceof DbТочка )
            результат = оператор.выполнить( (DbТочка)узел, точки() );
        else 
            результат = DbФрагмент.Экземпляр.super.выполнить( оператор, узел );
        return результат;
    }
    
}
