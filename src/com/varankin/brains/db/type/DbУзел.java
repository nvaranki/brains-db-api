package com.varankin.brains.db.type;

import com.varankin.brains.db.DbОператор;
import com.varankin.brains.db.Коллекция;

/**
 * Узел графа со стандартными коллекциями.
 *
 * @author &copy; 2021 Николай Варанкин
 */
public interface DbУзел extends DbАтрибутный
{
    
    /**
     * @return инструкции узла базы данных.
     */
    Коллекция<DbИнструкция> инструкции();

    /**
     * @return тексты узла базы данных.
     */
    Коллекция<DbТекстовыйБлок> тексты();

    /**
     * @return неизвестные узлы базы данных.
     */
    Коллекция<DbАтрибутный> прочее();

    /**
     * Выполняет заданный оператор над узлом и подходящей коллекцией.
     * 
     * @param <X>      класс результата, возвращаемого оператором.
     * @param оператор оператор над узлом и коллекцией.
     * @param узел     узел базы данных.
     * @return результат, возвращенный оператором.
     * @exception NullPointerException если узел - {@code null}. 
     */
    @Override
    default <X> X выполнить( DbОператор<X> оператор, DbАтрибутный узел )
    {
        X результат;
        if( узел instanceof DbИнструкция )
            результат = оператор.выполнить( (DbИнструкция)узел, инструкции() );
        else if( узел instanceof DbТекстовыйБлок )
            результат = оператор.выполнить( (DbТекстовыйБлок)узел, тексты() );
        else if( узел != null )
            результат = оператор.выполнить( узел, прочее() );
        else 
            throw new NullPointerException();
        return результат;
    }

}
